datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
    provider = "prisma-client-js"
}

enum UserRole {
    USER
    ADMIN
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String    @unique
    emailVerified DateTime?
    image         String?
    password      String?
    role          UserRole  @default(USER)
    accounts      Account[]

    isTwoFactorEnabled    Boolean                @default(false)
    twoFactorConfirmation TwoFactorConfirmation?
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model VerificationToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model PasswordResetToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model TwoFactorToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model TwoFactorConfirmation {
    id String @id @default(cuid())

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId])
}

model Product {
    id          String   @id @default(cuid())
    name        String
    description String
    price       Decimal
    stock       Int      @default(0) // Stock availability
    images      String[] // Cloudinary image URLs

    // Mobile & Laptop Specific Fields
    brand       String
    model       String
    processor   String?
    ram         String? // Example: 8GB, 16GB
    storage     String? // Example: 256GB SSD, 1TB HDD
    screenSize  String? // Example: 15.6", 6.5"
    batteryLife String? // Example: 8 hours, 5000mAh

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id       String    @id @default(cuid())
    name     String    @unique
    products Product[]
}
